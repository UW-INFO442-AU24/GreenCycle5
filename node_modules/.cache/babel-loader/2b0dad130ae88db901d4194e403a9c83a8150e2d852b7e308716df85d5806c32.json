{"ast":null,"code":"var _jsxFileName = \"/Users/carlsearle/Documents/info_442/GreenCycle5/greencycle/src/components/Map/map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../app.css';\nimport '../Map/map.css';\nimport L from 'leaflet';\n\n// Leaflet default marker configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Custom icons\nconst userLocationIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/your location pin.png',\n  iconSize: [30, 30],\n  iconAnchor: [15, 30]\n});\nconst facilityIcon = new L.Icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/recycle pin.png',\n  iconSize: [30, 30],\n  iconAnchor: [15, 30]\n});\n\n// Component to locate and display the user's position\nconst LocateUser = ({\n  location\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (location) {\n      map.flyTo(location, 13);\n    }\n  }, [location, map]);\n  return location ? /*#__PURE__*/_jsxDEV(Marker, {\n    position: location,\n    icon: userLocationIcon,\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      direction: \"top\",\n      offset: [0, -10],\n      opacity: 1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Your Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this) : null;\n};\n\n// Component to fly to a selected facility\n_s(LocateUser, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = LocateUser;\nconst FlyToFacility = ({\n  facility\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (facility) {\n      map.flyTo([facility.latitude, facility.longitude], 13);\n    }\n  }, [facility, map]);\n  return null; // No rendering\n};\n\n// Helper function to calculate distance between two coordinates in miles\n_s2(FlyToFacility, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = FlyToFacility;\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 3958.8; // Earth's radius in miles\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distance in miles\n};\nconst MapComponent = () => {\n  _s3();\n  const [facilities, setFacilities] = useState([]);\n  const [filteredFacilities, setFilteredFacilities] = useState([]);\n  const [selectedFacilityId, setSelectedFacilityId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [userLocation, setUserLocation] = useState(null);\n  const searchInputRef = useRef(null);\n  const [materials, setMaterials] = useState([]); // List of unique materials\n  const [selectedMaterials, setSelectedMaterials] = useState([]);\n\n  // Fetch facilities data and process it\n  useEffect(() => {\n    fetch('/facilities.json').then(response => response.json()).then(data => {\n      setFacilities(data);\n      setFilteredFacilities(data);\n\n      // Extract unique materials from the dataset\n      const allMaterials = new Set();\n      data.forEach(facility => {\n        facility.materials.forEach(material => {\n          allMaterials.add(material);\n        });\n      });\n      setMaterials(Array.from(allMaterials).sort());\n    }).catch(error => console.error('Error fetching facility data:', error));\n  }, []);\n\n  // Filter facilities based on search query (name or materials)\n  useEffect(() => {\n    const lowerCaseQuery = searchQuery.toLowerCase();\n    const filtered = facilities.filter(facility => {\n      // Check if facility matches search query by name or materials\n      const matchesQuery = facility.name.toLowerCase().includes(lowerCaseQuery) || facility.materials.some(material => material.toLowerCase().includes(lowerCaseQuery));\n\n      // Check if facility matches selected materials\n      const matchesMaterials = selectedMaterials.length === 0 || selectedMaterials.every(material => facility.materials.includes(material));\n      return matchesQuery && matchesMaterials;\n    });\n    setFilteredFacilities(filtered);\n  }, [searchQuery, selectedMaterials, facilities]);\n\n  // Filter facilities based on selected materials\n  useEffect(() => {\n    let filtered = facilities;\n    if (selectedMaterials.length > 0) {\n      filtered = filtered.filter(facility => selectedMaterials.every(mat => facility.materials.includes(mat)));\n    }\n    setFilteredFacilities(filtered);\n  }, [selectedMaterials, facilities]);\n\n  // Handle search input change\n  const handleSearchInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  // Handle material filter change\n  const handleMaterialFilterChange = material => {\n    const updatedMaterials = selectedMaterials.includes(material) ? selectedMaterials.filter(m => m !== material) : [...selectedMaterials, material];\n    setSelectedMaterials(updatedMaterials);\n  };\n\n  // Highlight selected facility and sort nearby ones\n  const highlightFacility = clickedFacility => {\n    const sortedFacilities = [...facilities].sort((a, b) => {\n      const distA = calculateDistance(clickedFacility.latitude, clickedFacility.longitude, a.latitude, a.longitude);\n      const distB = calculateDistance(clickedFacility.latitude, clickedFacility.longitude, b.latitude, b.longitude);\n      return distA - distB;\n    });\n    const updatedList = [clickedFacility, ...sortedFacilities.filter(f => f.id !== clickedFacility.id)];\n    setFilteredFacilities(updatedList);\n  };\n\n  // Handle marker click\n  const handleMarkerClick = facility => {\n    setSelectedFacilityId(facility.id);\n    highlightFacility(facility);\n  };\n\n  // Locate user and sort facilities by proximity\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const location = [latitude, longitude];\n        setUserLocation(location);\n        const sortedFacilities = [...facilities].sort((a, b) => {\n          const distA = calculateDistance(location[0], location[1], a.latitude, a.longitude);\n          const distB = calculateDistance(location[0], location[1], b.latitude, b.longitude);\n          return distA - distB;\n        });\n        setFilteredFacilities(sortedFacilities);\n      }, error => console.error('Error getting location:', error));\n    } else {\n      alert('Geolocation is not supported by your browser.');\n    }\n  };\n  const selectedFacility = facilities.find(facility => facility.id === selectedFacilityId);\n  useEffect(() => {\n    const handleResize = () => {\n      const mapElement = document.querySelector('.leaflet-container');\n      if (mapElement) {\n        mapElement.style.width = '100%';\n        mapElement.style.height = '100%';\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-page\",\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter by Materials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-filters\",\n        children: materials.map(material => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: material,\n              onChange: () => handleMaterialFilterChange(material),\n              checked: selectedMaterials.includes(material)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this), material]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this)\n        }, material, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recycling Facilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), filteredFacilities.length > 0 ? filteredFacilities.map(facility => {\n        const distance = userLocation ? calculateDistance(userLocation[0], userLocation[1], facility.latitude, facility.longitude).toFixed(2) : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `facility-card ${selectedFacilityId === facility.id ? 'selected' : ''}`,\n          onClick: () => setSelectedFacilityId(facility.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: facility.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: facility.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: facility.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", distance, \" miles\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hours:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 37\n            }, this), \" \", facility.hours]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Contact:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), \" \", facility.contact]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: facility.website,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Visit Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: facility.directions,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Get Directions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this)]\n        }, facility.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No facilities match your search criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-controls\",\n        ref: searchInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search facilities or materials...\",\n          value: searchQuery,\n          onChange: handleSearchInputChange,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getUserLocation,\n          className: \"location-button\",\n          children: \"Use My Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [47.6567, -122.3166],\n        zoom: 13,\n        className: \"map\",\n        whenReady: map => {\n          map.target.invalidateSize(); // Ensures the map adjusts to its container\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 22\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(LocateUser, {\n          location: userLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 38\n        }, this), selectedFacility && /*#__PURE__*/_jsxDEV(FlyToFacility, {\n          facility: selectedFacility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 42\n        }, this), filteredFacilities.map(facility => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [facility.latitude, facility.longitude],\n          icon: facilityIcon,\n          eventHandlers: {\n            click: () => handleMarkerClick(facility)\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            direction: \"top\",\n            offset: [0, -10],\n            opacity: 1,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: facility.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)\n        }, facility.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s3(MapComponent, \"gFr8p7IYAP+AkPzinIhwGg59Vcw=\");\n_c3 = MapComponent;\nexport default MapComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LocateUser\");\n$RefreshReg$(_c2, \"FlyToFacility\");\n$RefreshReg$(_c3, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Tooltip","useMap","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","userLocationIcon","process","env","PUBLIC_URL","iconSize","iconAnchor","facilityIcon","LocateUser","location","_s","map","flyTo","position","icon","children","direction","offset","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlyToFacility","facility","_s2","latitude","longitude","_c2","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","MapComponent","_s3","facilities","setFacilities","filteredFacilities","setFilteredFacilities","selectedFacilityId","setSelectedFacilityId","searchQuery","setSearchQuery","userLocation","setUserLocation","searchInputRef","materials","setMaterials","selectedMaterials","setSelectedMaterials","fetch","then","response","json","data","allMaterials","Set","forEach","material","add","Array","from","sort","catch","error","console","lowerCaseQuery","toLowerCase","filtered","filter","matchesQuery","name","includes","some","matchesMaterials","length","every","mat","handleSearchInputChange","e","target","value","handleMaterialFilterChange","updatedMaterials","m","highlightFacility","clickedFacility","sortedFacilities","b","distA","distB","updatedList","f","id","handleMarkerClick","getUserLocation","navigator","geolocation","getCurrentPosition","coords","alert","selectedFacility","find","handleResize","mapElement","document","querySelector","style","width","height","window","addEventListener","removeEventListener","className","type","onChange","checked","distance","toFixed","onClick","address","description","hours","contact","href","website","rel","directions","ref","placeholder","center","zoom","whenReady","invalidateSize","attribution","url","eventHandlers","click","_c3","$RefreshReg$"],"sources":["/Users/carlsearle/Documents/info_442/GreenCycle5/greencycle/src/components/Map/map.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Tooltip, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../app.css';\nimport '../Map/map.css';\n\nimport L from 'leaflet';\n\n// Leaflet default marker configuration\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// Custom icons\nconst userLocationIcon = new L.Icon({\n    iconUrl: process.env.PUBLIC_URL + '/icons/your location pin.png',\n    iconSize: [30, 30],\n    iconAnchor: [15, 30],\n});\n\nconst facilityIcon = new L.Icon({\n    iconUrl: process.env.PUBLIC_URL + '/icons/recycle pin.png',\n    iconSize: [30, 30],\n    iconAnchor: [15, 30],\n});\n\n// Component to locate and display the user's position\nconst LocateUser = ({ location }) => {\n    const map = useMap();\n    useEffect(() => {\n        if (location) {\n            map.flyTo(location, 13);\n        }\n    }, [location, map]);\n\n    return location ? (\n        <Marker position={location} icon={userLocationIcon}>\n            <Tooltip direction=\"top\" offset={[0, -10]} opacity={1}>\n                <div>Your Location</div>\n            </Tooltip>\n        </Marker>\n    ) : null;\n};\n\n// Component to fly to a selected facility\nconst FlyToFacility = ({ facility }) => {\n    const map = useMap();\n    useEffect(() => {\n        if (facility) {\n            map.flyTo([facility.latitude, facility.longitude], 13);\n        }\n    }, [facility, map]);\n\n    return null; // No rendering\n};\n\n// Helper function to calculate distance between two coordinates in miles\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 3958.8; // Earth's radius in miles\n    const dLat = ((lat2 - lat1) * Math.PI) / 180;\n    const dLon = ((lon2 - lon1) * Math.PI) / 180;\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos((lat1 * Math.PI) / 180) *\n            Math.cos((lat2 * Math.PI) / 180) *\n            Math.sin(dLon / 2) *\n            Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in miles\n};\n\nconst MapComponent = () => {\n    const [facilities, setFacilities] = useState([]);\n    const [filteredFacilities, setFilteredFacilities] = useState([]);\n    const [selectedFacilityId, setSelectedFacilityId] = useState(null);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [userLocation, setUserLocation] = useState(null);\n    const searchInputRef = useRef(null);\n\n    const [materials, setMaterials] = useState([]); // List of unique materials\n    const [selectedMaterials, setSelectedMaterials] = useState([]);\n\n    // Fetch facilities data and process it\n    useEffect(() => {\n        fetch('/facilities.json')\n            .then((response) => response.json())\n            .then((data) => {\n                setFacilities(data);\n                setFilteredFacilities(data);\n\n                // Extract unique materials from the dataset\n                const allMaterials = new Set();\n                data.forEach((facility) => {\n                    facility.materials.forEach((material) => {\n                        allMaterials.add(material);\n                    });\n                });\n                setMaterials(Array.from(allMaterials).sort());\n            })\n            .catch((error) => console.error('Error fetching facility data:', error));\n    }, []);\n\n    // Filter facilities based on search query (name or materials)\n    useEffect(() => {\n        const lowerCaseQuery = searchQuery.toLowerCase();\n\n        const filtered = facilities.filter((facility) => {\n            // Check if facility matches search query by name or materials\n            const matchesQuery =\n                facility.name.toLowerCase().includes(lowerCaseQuery) ||\n                facility.materials.some((material) => material.toLowerCase().includes(lowerCaseQuery));\n\n            // Check if facility matches selected materials\n            const matchesMaterials =\n                selectedMaterials.length === 0 ||\n                selectedMaterials.every((material) => facility.materials.includes(material));\n\n            return matchesQuery && matchesMaterials;\n        });\n\n        setFilteredFacilities(filtered);\n    }, [searchQuery, selectedMaterials, facilities]);\n\n    // Filter facilities based on selected materials\n    useEffect(() => {\n        let filtered = facilities;\n\n        if (selectedMaterials.length > 0) {\n            filtered = filtered.filter((facility) =>\n                selectedMaterials.every((mat) => facility.materials.includes(mat))\n            );\n        }\n\n        setFilteredFacilities(filtered);\n    }, [selectedMaterials, facilities]);\n\n    // Handle search input change\n    const handleSearchInputChange = (e) => {\n        setSearchQuery(e.target.value);\n    };\n\n    // Handle material filter change\n    const handleMaterialFilterChange = (material) => {\n        const updatedMaterials = selectedMaterials.includes(material)\n            ? selectedMaterials.filter((m) => m !== material)\n            : [...selectedMaterials, material];\n        setSelectedMaterials(updatedMaterials);\n    };\n\n    // Highlight selected facility and sort nearby ones\n    const highlightFacility = (clickedFacility) => {\n        const sortedFacilities = [...facilities].sort((a, b) => {\n            const distA = calculateDistance(\n                clickedFacility.latitude,\n                clickedFacility.longitude,\n                a.latitude,\n                a.longitude\n            );\n            const distB = calculateDistance(\n                clickedFacility.latitude,\n                clickedFacility.longitude,\n                b.latitude,\n                b.longitude\n            );\n            return distA - distB;\n        });\n\n        const updatedList = [clickedFacility, ...sortedFacilities.filter((f) => f.id !== clickedFacility.id)];\n        setFilteredFacilities(updatedList);\n    };\n\n    // Handle marker click\n    const handleMarkerClick = (facility) => {\n        setSelectedFacilityId(facility.id);\n        highlightFacility(facility);\n    };\n\n\n    // Locate user and sort facilities by proximity\n    const getUserLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    const location = [latitude, longitude];\n                    setUserLocation(location);\n\n                    const sortedFacilities = [...facilities].sort((a, b) => {\n                        const distA = calculateDistance(location[0], location[1], a.latitude, a.longitude);\n                        const distB = calculateDistance(location[0], location[1], b.latitude, b.longitude);\n                        return distA - distB;\n                    });\n\n                    setFilteredFacilities(sortedFacilities);\n                },\n                (error) => console.error('Error getting location:', error)\n            );\n        } else {\n            alert('Geolocation is not supported by your browser.');\n        }\n    };\n\n    const selectedFacility = facilities.find((facility) => facility.id === selectedFacilityId);\n\n    useEffect(() => {\n        const handleResize = () => {\n            const mapElement = document.querySelector('.leaflet-container');\n            if (mapElement) {\n                mapElement.style.width = '100%';\n                mapElement.style.height = '100%';\n            }\n        };\n    \n        window.addEventListener('resize', handleResize);\n        handleResize();\n    \n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n    \n\n    return (\n        <div id=\"map-page\" className=\"main-container\">\n            {/* Sidebar */}\n            <div className=\"left-sidebar\">\n                <h3>Filter by Materials</h3>\n                <div className=\"material-filters\">\n                    {materials.map((material) => (\n                        <div key={material}>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    value={material}\n                                    onChange={() => handleMaterialFilterChange(material)}\n                                    checked={selectedMaterials.includes(material)}\n                                />\n                                {material}\n                            </label>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n             {/* Right Sidebar: Facility List */}\n            <div className=\"right-sidebar\">\n                <h3>Recycling Facilities</h3>\n                {filteredFacilities.length > 0 ? (\n                    filteredFacilities.map((facility) => {\n                        const distance = userLocation\n                            ? calculateDistance(\n                                userLocation[0],\n                                userLocation[1],\n                                facility.latitude,\n                                facility.longitude\n                            ).toFixed(2)\n                            : null;\n                        return (\n                            <div\n                                key={facility.id}\n                                className={`facility-card ${\n                                    selectedFacilityId === facility.id ? 'selected' : ''\n                                }`}\n                                onClick={() => setSelectedFacilityId(facility.id)}\n                            >\n                                <h4>{facility.name}</h4>\n                                <p>{facility.address}</p>\n                                <p>{facility.description}</p>\n                                {distance && <p>Distance: {distance} miles</p>}\n                                <p>\n                                    <strong>Hours:</strong> {facility.hours}\n                                </p>\n                                <p>\n                                    <strong>Contact:</strong> {facility.contact}\n                                </p>\n                                <a href={facility.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    Visit Website\n                                </a>\n                                <a href={facility.directions} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    Get Directions\n                                </a>\n                            </div>\n                        );\n                    })\n                ) : (\n                    <p>No facilities match your search criteria.</p>\n                )}\n            </div>\n\n            {/* Map and Search */}\n            <div className=\"content-container\">\n                {/* Search bar */}\n                <div className=\"map-controls\" ref={searchInputRef}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search facilities or materials...\"\n                        value={searchQuery}\n                        onChange={handleSearchInputChange}\n                        className=\"search-bar\"\n                    />\n                    <button onClick={getUserLocation} className=\"location-button\">\n                        Use My Location\n                    </button>\n                </div>\n\n                {/* Map */}\n                <MapContainer center={[47.6567, -122.3166]} zoom={13} className=\"map\"\n                whenReady={(map) => {\n        map.target.invalidateSize(); // Ensures the map adjusts to its container\n    }}>\n                     <TileLayer\n                        attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {userLocation && <LocateUser location={userLocation} />}\n                    {selectedFacility && <FlyToFacility facility={selectedFacility} />}\n                    {filteredFacilities.map((facility) => (\n                        <Marker\n                            key={facility.id}\n                            position={[facility.latitude, facility.longitude]}\n                            icon={facilityIcon}\n                            eventHandlers={{\n                                click: () => handleMarkerClick(facility),\n                            }}\n                        >\n                            <Tooltip direction=\"top\" offset={[0, -10]} opacity={1}>\n                                <div>{facility.name}</div>\n                            </Tooltip>\n                        </Marker>\n                    ))}\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}