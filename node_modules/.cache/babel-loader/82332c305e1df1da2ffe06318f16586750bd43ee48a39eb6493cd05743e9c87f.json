{"ast":null,"code":"var _jsxFileName = \"/Users/carlsearle/Documents/info_442/GreenCycle5/greencycle/src/components/Quiz/quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  // Correct Answers (for reference)\n  const correctAnswers = {\n    q1: \"B\",\n    q2: \"C\",\n    q3: \"B\",\n    q4: \"B\",\n    q5: \"A\",\n    q6: \"A\",\n    q7: \"B\",\n    q8: \"D\",\n    q9: \"C\",\n    q10: \"B\",\n    q11: \"D\",\n    q12: \"A\",\n    q13: \"A\",\n    q14: \"B\",\n    q15: \"B\"\n  };\n\n  // Questions and Answers Data\n  const questionsData = [{\n    question: \"Which of the following materials can typically be recycled?\",\n    answers: [{\n      text: \"Pizza boxes with grease stains\",\n      value: \"A\"\n    }, {\n      text: \"Glass bottles\",\n      value: \"B\"\n    }, {\n      text: \"Tissues\",\n      value: \"C\"\n    }, {\n      text: \"Food wrappers\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }, {\n    question: \"What does the recycling symbol with the number '1' inside typically represent?\",\n    answers: [{\n      text: \"Paper\",\n      value: \"A\"\n    }, {\n      text: \"Aluminum\",\n      value: \"B\"\n    }, {\n      text: \"Plastic (PET)\",\n      value: \"C\"\n    }, {\n      text: \"Glass\",\n      value: \"D\"\n    }],\n    correct: \"C\"\n  }, {\n    question: \"Which of these items should not be placed in a recycling bin?\",\n    answers: [{\n      text: \"Aluminum cans\",\n      value: \"A\"\n    }, {\n      text: \"Broken glass\",\n      value: \"B\"\n    }, {\n      text: \"Cardboard\",\n      value: \"C\"\n    }, {\n      text: \"Plastic bottles\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }, {\n    question: \"What is a common reason for contamination in recycling bins?\",\n    answers: [{\n      text: \"Mixing food waste with recyclables\",\n      value: \"A\"\n    }, {\n      text: \"Not having enough bins\",\n      value: \"B\"\n    }, {\n      text: \"Using incorrect recycling symbols\",\n      value: \"C\"\n    }, {\n      text: \"Using clear plastic bags\",\n      value: \"D\"\n    }],\n    correct: \"A\"\n  }, {\n    question: \"What is the main purpose of recycling paper?\",\n    answers: [{\n      text: \"To create new paper products\",\n      value: \"A\"\n    }, {\n      text: \"To reduce air pollution\",\n      value: \"B\"\n    }, {\n      text: \"To save water\",\n      value: \"C\"\n    }, {\n      text: \"To reduce waste in landfills\",\n      value: \"D\"\n    }],\n    correct: \"A\"\n  }, {\n    question: \"What is the process of breaking down recyclable materials into raw materials for new products called?\",\n    answers: [{\n      text: \"Incineration\",\n      value: \"A\"\n    }, {\n      text: \"Reuse\",\n      value: \"B\"\n    }, {\n      text: \"Upcycling\",\n      value: \"C\"\n    }, {\n      text: \"Reprocessing\",\n      value: \"D\"\n    }],\n    correct: \"D\"\n  }, {\n    question: \"What is 'e-waste?'\",\n    answers: [{\n      text: \"Waste from electronic devices like phones and computers\",\n      value: \"A\"\n    }, {\n      text: \"Waste from food packaging\",\n      value: \"B\"\n    }, {\n      text: \"Waste that can be composted\",\n      value: \"C\"\n    }, {\n      text: \"Waste generated from cleaning products\",\n      value: \"D\"\n    }],\n    correct: \"A\"\n  }, {\n    question: \"Which of the following items is considered hazardous waste and should not go in your regular recycling bin?\",\n    answers: [{\n      text: \"Old batteries\",\n      value: \"A\"\n    }, {\n      text: \"Newspaper\",\n      value: \"B\"\n    }, {\n      text: \"Aluminum foil\",\n      value: \"C\"\n    }, {\n      text: \"Cardboard\",\n      value: \"D\"\n    }],\n    correct: \"A\"\n  }, {\n    question: \"What should you do if you're unsure whether an item is recyclable?\",\n    answers: [{\n      text: \"Recycle it\",\n      value: \"A\"\n    }, {\n      text: \"Throw it in the trash\",\n      value: \"B\"\n    }, {\n      text: \"Leave it outside for a pickup\",\n      value: \"C\"\n    }, {\n      text: \"Burn it\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }, {\n    question: \"Which of these items is an example of a compostable material rather than a recyclable one?\",\n    answers: [{\n      text: \"Paper towel\",\n      value: \"A\"\n    }, {\n      text: \"Milk jug\",\n      value: \"B\"\n    }, {\n      text: \"Aluminum foil\",\n      value: \"C\"\n    }, {\n      text: \"Glass bottle\",\n      value: \"D\"\n    }],\n    correct: \"A\"\n  }, {\n    question: \"Which of the following materials can take the longest to break down in a landfill, making recycling especially important?\",\n    answers: [{\n      text: \"Paper\",\n      value: \"A\"\n    }, {\n      text: \"Plastic bottles\",\n      value: \"B\"\n    }, {\n      text: \"Aluminum cans\",\n      value: \"C\"\n    }, {\n      text: \"Banana peels\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }, {\n    question: \"Which of the following is NOT a recyclable plastic?\",\n    answers: [{\n      text: \"PET (Polyethylene Terephthalate)\",\n      value: \"A\"\n    }, {\n      text: \"HDPE (High-Density Polyethylene)\",\n      value: \"B\"\n    }, {\n      text: \"PVC (Polyvinyl Chloride)\",\n      value: \"C\"\n    }, {\n      text: \"PLA (Polylactic Acid)\",\n      value: \"D\"\n    }],\n    correct: \"D\"\n  }, {\n    question: \"How long does it typically take for a plastic bottle to decompose in a landfill?\",\n    answers: [{\n      text: \"10 years\",\n      value: \"A\"\n    }, {\n      text: \"100 years\",\n      value: \"B\"\n    }, {\n      text: \"1,000 years\",\n      value: \"C\"\n    }, {\n      text: \"10,000 years\",\n      value: \"D\"\n    }],\n    correct: \"C\"\n  }, {\n    question: \"Why are some recycling programs starting to accept 'soft plastics' (e.g., chip bags, plastic wrappers)?\",\n    answers: [{\n      text: \"Soft plastics are easier to recycle than hard plastics\",\n      value: \"A\"\n    }, {\n      text: \"There are new technologies and methods to recycle soft plastics more efficiently\",\n      value: \"B\"\n    }, {\n      text: \"Soft plastics do not take up as much space in landfills\",\n      value: \"C\"\n    }, {\n      text: \"They decompose faster than hard plastics\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }, {\n    question: \"What is a common obstacle to more widespread recycling?\",\n    answers: [{\n      text: \"Lack of materials to recycle\",\n      value: \"A\"\n    }, {\n      text: \"Confusion about what can and cannot be recycled\",\n      value: \"B\"\n    }, {\n      text: \"Recycling costs more than producing new materials\",\n      value: \"C\"\n    }, {\n      text: \"Recycling processes release harmful chemicals\",\n      value: \"D\"\n    }],\n    correct: \"B\"\n  }];\n\n  // State to track the user's answers, the current question index, and the screen state\n  const [answers, setAnswers] = useState({});\n  const [showResult, setShowResult] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [questions, setQuestions] = useState([]); // Store shuffled questions\n\n  const shuffleArray = array => {\n    return array.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n  };\n  useEffect(() => {\n    if (isQuizStarted) {\n      // Shuffle and set the questions once the quiz starts\n      const shuffledQuestions = shuffleArray(questionsData);\n      const shuffledQuestionsWithAnswers = shuffledQuestions.map(question => ({\n        ...question,\n        answers: shuffleArray(question.answers)\n      }));\n      setQuestions(shuffledQuestionsWithAnswers);\n    }\n  }, [isQuizStarted]);\n  const handleAnswerChange = (questionIndex, selectedValue) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [`q${questionIndex}`]: selectedValue\n    }));\n  };\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questions.length - 1));\n  };\n  const handlePreviousQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const calculateScore = () => {\n    let score = 0;\n    let results = [];\n    questions.forEach((question, index) => {\n      var _question$answers$fin;\n      const selectedAnswer = answers[`q${index + 1}`];\n      const selectedAnswerText = (_question$answers$fin = question.answers.find(ans => ans.value === selectedAnswer)) === null || _question$answers$fin === void 0 ? void 0 : _question$answers$fin.text;\n      if (selectedAnswer === question.correct) {\n        score++;\n        results.push({\n          question: question.question,\n          selected: selectedAnswerText,\n          correct: true,\n          correctAnswerText: question.answers.find(ans => ans.value === question.correct).text\n        });\n      } else {\n        results.push({\n          question: question.question,\n          selected: selectedAnswerText,\n          correct: false,\n          correctAnswerText: question.answers.find(ans => ans.value === question.correct).text\n        });\n      }\n    });\n    setShowResult(true);\n    setAnswers({\n      score,\n      results\n    });\n  };\n  const renderWelcomeScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"welcome-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recycling Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test your knowledge on recycling!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsQuizStarted(true),\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this);\n  };\n  const renderQuiz = () => {\n    if (!questions || questions.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading quiz...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 20\n      }, this);\n    }\n    const question = questions[currentQuestionIndex];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recycling Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `${currentQuestionIndex + 1}. ${question.question}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answers\",\n          children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${currentQuestionIndex + 1}`,\n                value: answer.value,\n                onChange: () => handleAnswerChange(currentQuestionIndex + 1, answer.value),\n                checked: answers[`q${currentQuestionIndex + 1}`] === answer.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), answer.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)\n          }, answer.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousQuestion,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), currentQuestionIndex < questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), currentQuestionIndex === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateScore,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this);\n  };\n  const renderResult = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", answers.score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answers.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: result.correct ? 'green' : 'red'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [result.correct ? 'Correct' : 'Incorrect', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this), \" \", result.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), \"Your answer: \", result.selected, result.correct ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Correct answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), \" \", result.correctAnswerText]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetQuiz,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this);\n  };\n  const resetQuiz = () => {\n    setIsQuizStarted(false); // Return to welcome screen\n    setAnswers({}); // Clear answers\n    setShowResult(false); // Hide result popup\n    setCurrentQuestionIndex(0); // Reset to first question\n    setQuestions([]); // Clear questions\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quiz-container\",\n    children: isQuizStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderQuiz(), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: renderResult()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : renderWelcomeScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"gZrZmQGvjMVY2Ow+RrTVANJE3Lk=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","correctAnswers","q1","q2","q3","q4","q5","q6","q7","q8","q9","q10","q11","q12","q13","q14","q15","questionsData","question","answers","text","value","correct","setAnswers","showResult","setShowResult","currentQuestionIndex","setCurrentQuestionIndex","isQuizStarted","setIsQuizStarted","questions","setQuestions","shuffleArray","array","map","sort","Math","random","a","b","shuffledQuestions","shuffledQuestionsWithAnswers","handleAnswerChange","questionIndex","selectedValue","prevAnswers","handleNextQuestion","prevIndex","min","length","handlePreviousQuestion","max","calculateScore","score","results","forEach","index","_question$answers$fin","selectedAnswer","selectedAnswerText","find","ans","push","selected","correctAnswerText","renderWelcomeScreen","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderQuiz","className","answer","type","name","onChange","checked","renderResult","result","style","color","resetQuiz","_c","$RefreshReg$"],"sources":["/Users/carlsearle/Documents/info_442/GreenCycle5/greencycle/src/components/Quiz/quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Quiz() {\n    // Correct Answers (for reference)\n    const correctAnswers = {\n        q1: \"B\",\n        q2: \"C\",\n        q3: \"B\",\n        q4: \"B\",\n        q5: \"A\",\n        q6: \"A\",\n        q7: \"B\",\n        q8: \"D\",\n        q9: \"C\",\n        q10: \"B\",\n        q11: \"D\",\n        q12: \"A\",\n        q13: \"A\",\n        q14: \"B\",\n        q15: \"B\"\n    };\n\n    // Questions and Answers Data\n    const questionsData = [\n        {\n            question: \"Which of the following materials can typically be recycled?\",\n            answers: [\n                { text: \"Pizza boxes with grease stains\", value: \"A\" },\n                { text: \"Glass bottles\", value: \"B\" },\n                { text: \"Tissues\", value: \"C\" },\n                { text: \"Food wrappers\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n        {\n            question: \"What does the recycling symbol with the number '1' inside typically represent?\",\n            answers: [\n                { text: \"Paper\", value: \"A\" },\n                { text: \"Aluminum\", value: \"B\" },\n                { text: \"Plastic (PET)\", value: \"C\" },\n                { text: \"Glass\", value: \"D\" }\n            ],\n            correct: \"C\"\n        },\n        {\n            question: \"Which of these items should not be placed in a recycling bin?\",\n            answers: [\n                { text: \"Aluminum cans\", value: \"A\" },\n                { text: \"Broken glass\", value: \"B\" },\n                { text: \"Cardboard\", value: \"C\" },\n                { text: \"Plastic bottles\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n        {\n            question: \"What is a common reason for contamination in recycling bins?\",\n            answers: [\n                { text: \"Mixing food waste with recyclables\", value: \"A\" },\n                { text: \"Not having enough bins\", value: \"B\" },\n                { text: \"Using incorrect recycling symbols\", value: \"C\" },\n                { text: \"Using clear plastic bags\", value: \"D\" }\n            ],\n            correct: \"A\"\n        },\n        {\n            question: \"What is the main purpose of recycling paper?\",\n            answers: [\n                { text: \"To create new paper products\", value: \"A\" },\n                { text: \"To reduce air pollution\", value: \"B\" },\n                { text: \"To save water\", value: \"C\" },\n                { text: \"To reduce waste in landfills\", value: \"D\" }\n            ],\n            correct: \"A\"\n        },\n        {\n            question: \"What is the process of breaking down recyclable materials into raw materials for new products called?\",\n            answers: [\n                { text: \"Incineration\", value: \"A\" },\n                { text: \"Reuse\", value: \"B\" },\n                { text: \"Upcycling\", value: \"C\" },\n                { text: \"Reprocessing\", value: \"D\" }\n            ],\n            correct: \"D\"\n        },\n        {\n            question: \"What is 'e-waste?'\",\n            answers: [\n                { text: \"Waste from electronic devices like phones and computers\", value: \"A\" },\n                { text: \"Waste from food packaging\", value: \"B\" },\n                { text: \"Waste that can be composted\", value: \"C\" },\n                { text: \"Waste generated from cleaning products\", value: \"D\" }\n            ],\n            correct: \"A\"\n        },\n        {\n            question: \"Which of the following items is considered hazardous waste and should not go in your regular recycling bin?\",\n            answers: [\n                { text: \"Old batteries\", value: \"A\" },\n                { text: \"Newspaper\", value: \"B\" },\n                { text: \"Aluminum foil\", value: \"C\" },\n                { text: \"Cardboard\", value: \"D\" }\n            ],\n            correct: \"A\"\n        },\n        {\n            question: \"What should you do if you're unsure whether an item is recyclable?\",\n            answers: [\n                { text: \"Recycle it\", value: \"A\" },\n                { text: \"Throw it in the trash\", value: \"B\" },\n                { text: \"Leave it outside for a pickup\", value: \"C\" },\n                { text: \"Burn it\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n        {\n            question: \"Which of these items is an example of a compostable material rather than a recyclable one?\",\n            answers: [\n                { text: \"Paper towel\", value: \"A\" },\n                { text: \"Milk jug\", value: \"B\" },\n                { text: \"Aluminum foil\", value: \"C\" },\n                { text: \"Glass bottle\", value: \"D\" }\n            ],\n            correct: \"A\"\n        },\n        {\n            question: \"Which of the following materials can take the longest to break down in a landfill, making recycling especially important?\",\n            answers: [\n                { text: \"Paper\", value: \"A\" },\n                { text: \"Plastic bottles\", value: \"B\" },\n                { text: \"Aluminum cans\", value: \"C\" },\n                { text: \"Banana peels\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n        {\n            question: \"Which of the following is NOT a recyclable plastic?\",\n            answers: [\n                { text: \"PET (Polyethylene Terephthalate)\", value: \"A\" },\n                { text: \"HDPE (High-Density Polyethylene)\", value: \"B\" },\n                { text: \"PVC (Polyvinyl Chloride)\", value: \"C\" },\n                { text: \"PLA (Polylactic Acid)\", value: \"D\" }\n            ],\n            correct: \"D\"\n        },\n        {\n            question: \"How long does it typically take for a plastic bottle to decompose in a landfill?\",\n            answers: [\n                { text: \"10 years\", value: \"A\" },\n                { text: \"100 years\", value: \"B\" },\n                { text: \"1,000 years\", value: \"C\" },\n                { text: \"10,000 years\", value: \"D\" }\n            ],\n            correct: \"C\"\n        },\n        {\n            question: \"Why are some recycling programs starting to accept 'soft plastics' (e.g., chip bags, plastic wrappers)?\",\n            answers: [\n                { text: \"Soft plastics are easier to recycle than hard plastics\", value: \"A\" },\n                { text: \"There are new technologies and methods to recycle soft plastics more efficiently\", value: \"B\" },\n                { text: \"Soft plastics do not take up as much space in landfills\", value: \"C\" },\n                { text: \"They decompose faster than hard plastics\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n        {\n            question: \"What is a common obstacle to more widespread recycling?\",\n            answers: [\n                { text: \"Lack of materials to recycle\", value: \"A\" },\n                { text: \"Confusion about what can and cannot be recycled\", value: \"B\" },\n                { text: \"Recycling costs more than producing new materials\", value: \"C\" },\n                { text: \"Recycling processes release harmful chemicals\", value: \"D\" }\n            ],\n            correct: \"B\"\n        },\n    ];\n\n    // State to track the user's answers, the current question index, and the screen state\n    const [answers, setAnswers] = useState({});\n    const [showResult, setShowResult] = useState(false);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [isQuizStarted, setIsQuizStarted] = useState(false);\n    const [questions, setQuestions] = useState([]); // Store shuffled questions\n\n    const shuffleArray = (array) => {\n        return array.map(value => ({ value, sort: Math.random() }))\n                    .sort((a, b) => a.sort - b.sort)\n                    .map(({ value }) => value);\n    };\n\n    useEffect(() => {\n        if (isQuizStarted) {\n            // Shuffle and set the questions once the quiz starts\n            const shuffledQuestions = shuffleArray(questionsData);\n            const shuffledQuestionsWithAnswers = shuffledQuestions.map(question => ({\n                ...question,\n                answers: shuffleArray(question.answers)\n            }));\n            setQuestions(shuffledQuestionsWithAnswers);\n        }\n    }, [isQuizStarted]);\n\n    const handleAnswerChange = (questionIndex, selectedValue) => {\n        setAnswers(prevAnswers => ({\n            ...prevAnswers,\n            [`q${questionIndex}`]: selectedValue\n        }));\n    };\n\n    const handleNextQuestion = () => {\n        setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questions.length - 1));\n    };\n\n    const handlePreviousQuestion = () => {\n        setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    };\n\n    const calculateScore = () => {\n        let score = 0;\n        let results = [];\n\n        questions.forEach((question, index) => {\n            const selectedAnswer = answers[`q${index + 1}`];\n\n            const selectedAnswerText = question.answers.find(ans => ans.value === selectedAnswer)?.text;\n\n            if (selectedAnswer === question.correct) {\n                score++;\n                results.push({\n                    question: question.question,\n                    selected: selectedAnswerText,\n                    correct: true,\n                    correctAnswerText: question.answers.find(ans => ans.value === question.correct).text\n                });\n            } else {\n                results.push({\n                    question: question.question,\n                    selected: selectedAnswerText,\n                    correct: false,\n                    correctAnswerText: question.answers.find(ans => ans.value === question.correct).text\n                });\n            }\n        });\n\n        setShowResult(true);\n        setAnswers({\n            score,\n            results\n        });\n    };\n\n    const renderWelcomeScreen = () => {\n        return (\n            <div id=\"welcome-screen\">\n                <h1>Recycling Quiz</h1>\n                <p>Test your knowledge on recycling!</p>\n                <button onClick={() => setIsQuizStarted(true)}>Start Quiz</button>\n            </div>\n        );\n    };\n\n    const renderQuiz = () => {\n        if (!questions || questions.length === 0) {\n            return <div>Loading quiz...</div>;\n        }\n\n        const question = questions[currentQuestionIndex];\n\n        return (\n            <div id=\"quiz-section\">\n                <h1>Recycling Quiz</h1>\n                <div className=\"question\">\n                    <h3>{`${currentQuestionIndex + 1}. ${question.question}`}</h3>\n                    <ul className=\"answers\">\n                        {question.answers.map(answer => (\n                            <li key={answer.value}>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name={`q${currentQuestionIndex + 1}`}\n                                        value={answer.value}\n                                        onChange={() => handleAnswerChange(currentQuestionIndex + 1, answer.value)}\n                                        checked={answers[`q${currentQuestionIndex + 1}`] === answer.value}\n                                    />\n                                    {answer.text}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"navigation\">\n                    {currentQuestionIndex > 0 && (\n                        <button onClick={handlePreviousQuestion}>Previous</button>\n                    )}\n                    {currentQuestionIndex < questions.length - 1 && (\n                        <button onClick={handleNextQuestion}>Next</button>\n                    )}\n                    {currentQuestionIndex === questions.length - 1 && (\n                        <button onClick={calculateScore}>Submit</button>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    const renderResult = () => {\n        return (\n            <div className=\"result-popup\">\n                <h2>Your Results</h2>\n                <p>Score: {answers.score} / {questions.length}</p>\n                <ul>\n                    {answers.results.map((result, index) => (\n                        <li key={index} style={{ color: result.correct ? 'green' : 'red' }}>\n                            <strong>{result.correct ? 'Correct' : 'Incorrect'}:</strong> {result.question}\n                            <br />\n                            Your answer: {result.selected}\n                            {result.correct ? null : (\n                                <>\n                                    <br />\n                                    <strong>Correct answer:</strong> {result.correctAnswerText}\n                                </>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n                <button onClick={resetQuiz}>Close</button>\n            </div>\n        );\n    };\n\n    const resetQuiz = () => {\n        setIsQuizStarted(false); // Return to welcome screen\n        setAnswers({}); // Clear answers\n        setShowResult(false); // Hide result popup\n        setCurrentQuestionIndex(0); // Reset to first question\n        setQuestions([]); // Clear questions\n    };\n\n    return (\n        <div id=\"quiz-container\">\n            {isQuizStarted ? (\n                <>\n                    {renderQuiz()}\n                    {showResult && (\n                        <div className=\"overlay\">\n                            {renderResult()}\n                        </div>\n                    )}\n                </>\n            ) : (\n                renderWelcomeScreen()\n            )}\n        </div>\n    );\n}\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}